<?php
/**
 * Created by PhpStorm.
 * User: 李沈阳
 * Date: 2018/5/11
 * Time: 10:48
 */

namespace App\Http\Controllers\admin;


use App\Http\Model\ActionDataModel;
use App\Http\Model\RoleActionModel;
use App\Http\Model\RoleDataModel;
use App\Validate\RoleValidate;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\View;

class RoleController extends BaseController
{

    public function beForeAction()
    {
        $actionPidList = ActionDataModel::where([ 'ad_pid'=> 0])->get();
        foreach ( $actionPidList as $key=> $val ){
            $actionPidList[$key]['actions'] = ActionDataModel::where([ 'ad_pid'=> $val['ad_id']])->get();
        }
        View::share('actionPidList', $actionPidList);

        parent::beForeAction(); // TODO: Change the autogenerated stub
    }

    public function toList()
    {
        $page = RoleDataModel::getPage();
        return view('admin.role.tolist')->with('page', $page);
    }

    public function doAdd(Request $request)
    {
        if($request->isMethod('post'))
        {
            (new RoleValidate())->goCheck();
            $actions = $request->actions; //获取对应权限
            if( empty($actions) )
            {
                return $this->resultHandler('请赋予该角色一个权限...', false);
            }
            if( is_null($request->id) ){
                //如果id不存在的话。就是添加

                $roleData = RoleDataModel::where([ 'rd_name'=> $request->name])->first();
                if( $roleData )
                {
                    return $this->resultHandler( '已存在同名角色...', false);
                }
                DB::beginTransaction(); //开启事物
                try{
                    $rolePrimaryKey = DB::table('role_data')->insertGetId([
                        'rd_name'=> $request->name,
                        'rd_message'=> $request->message,
                        'order'=> $request->order,
                        'status'=> $request->status,
                        'created_at'=> time(),
                        'updated_at'=> time(),
                    ]);
                    $roleActionData = [];
                    foreach ( $actions as $key=> $value )
                    {
                        $roleActionData[$key]['role_id']= $rolePrimaryKey;
                        $roleActionData[$key]['action_id'] = $value;
                    }
                    DB::table('role_action')->insert($roleActionData);
                    DB::commit(); //提交事物
                    return $this->resultHandler('操作成功', true);
                }catch (\Exception $e)
                {
                    DB::rollBack();
                    return $this->resultHandler( $e->getMessage(), false);
                }
            }else {
                DB::beginTransaction();
                try {
                    $roleModel = RoleDataModel::find($request->id);
                    $roleModel->rd_name = $request->name;
                    $roleModel->rd_message = $request->message;
                    $roleModel->order = $request->order;
                    $roleModel->status = $request->status;
                    $roleModel->save();
                    DB::table('role_action')->where( 'role_id', '=', $request->id)->delete(); //不想麻烦就直接把角色的权限先全部删除
                    $roleActionData = [];
                    foreach ( $actions as $key=> $value )
                    {
                        $roleActionData[$key]['role_id']= $roleModel->id;
                        $roleActionData[$key]['action_id'] = $value;
                    }
                    DB::table('role_action')->insert($roleActionData);
                    DB::commit();
                    return $this->resultHandler('操作成功', true);
                } catch (\Exception $ex) {
                    DB::rollBack();
                    return $this->resultHandler( $ex->getMessage(), false);
                }
            }
        }else{
            if( is_null($request->id) )
            {
                $data = [];
            }else{
                $data = $action = RoleDataModel::find($request->id); //如果参数中的id存在的话，说明是修改 获取信息返回模板
                $actions = RoleActionModel::where('role_id', '=', $request->id)->get(); //获取所有的权限行为id
                $data['actions'] = array_column(  $actions->toArray(),'action_id'); //只将所有的行为id查询出来，便于判断是否存在
            }
            return view('admin.role.doadd')->with('data', $data);
        }
    }
    public function editOrder(Request $request)
    {
        $data = ActionDataModel::find($request->id);
        $data->order= $request->order;
        return $this->resultHandles($data->save());
    }
    public function doDel(Request $request)
    {

        $result = DB::table('role_data')->where(['rd_id'=> $request->id])->delete();
        return  $this->resultHandles($result);
    }
    public function editStatus(Request $request)
    {
        $data = ActionDataModel::find($request->id);
        $data->status = $request->state;
        return $this->resultHandles($data->save());
    }

}